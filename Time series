library(dplyr)
library(ggplot2)
library(lubridate)

# Citim datele
nox <- read.csv("C:/Users/emyst/Desktop/nox.csv")

# Verificăm primele rânduri
head(nox)

# Extragem doar data din coloana zi (fără ora)
# Presupunem că formatul este "YYYY-MM-DD HH"
nox$data <- as.Date(substr(nox$zi, 1, 10))

nox_zilnic <- nox %>%
  distinct(data, .keep_all = TRUE)

# Verificăm datele rezultate
head(nox_zilnic)

# Grafic pentru SV.1 pe zile 
p1 <- ggplot(nox_zilnic, aes(x = data, y = SV.1)) +
  geom_line(color = "red", linewidth = 1) +
  geom_point() +
  labs(title = "Evoluția zilnică a SV.1",
       x = "Data",
       y = "SV.1") +
  theme_minimal()

print(p1)

# Grafic pentru toate cele trei variabile
nox_long <- nox_zilnic %>%
  select(data, SV.1, SV.2, SV.3) %>%
  tidyr::pivot_longer(
    cols = c(SV.1, SV.2, SV.3),
    names_to = "Variabila",
    values_to = "Valoare"
  )

p2 <- ggplot(nox_long, aes(x = data, y = Valoare, color = Variabila, group = Variabila)) +
  geom_line(linewidth = 1) +
  geom_point() +
  labs(title = "Evoluția zilnică a valorilor SV",
       x = "Data",
       y = "Valoare") +
  theme_minimal() +
  scale_color_manual(values = c("red", "blue", "green"))

print(p2)

# Analiză statistică a datelor
summ <- nox_zilnic %>%
  summarise(
    SV.1_medie = mean(SV.1, na.rm = TRUE),
    SV.1_min = min(SV.1, na.rm = TRUE),
    SV.1_max = max(SV.1, na.rm = TRUE),
    SV.1_sd = sd(SV.1, na.rm = TRUE),
    SV.2_medie = mean(SV.2, na.rm = TRUE),
    SV.2_min = min(SV.2, na.rm = TRUE),
    SV.2_max = max(SV.2, na.rm = TRUE),
    SV.2_sd = sd(SV.2, na.rm = TRUE),
    SV.3_medie = mean(SV.3, na.rm = TRUE),
    SV.3_min = min(SV.3, na.rm = TRUE),
    SV.3_max = max(SV.3, na.rm = TRUE),
    SV.3_sd = sd(SV.3, na.rm = TRUE)
  )

print(summ)





















#TIMES SERIES CU INTERVALE DE VALOIR


library(dplyr)
library(ggplot2)
library(lubridate)

# Citim datele
nox <- read.csv("C:/Users/emyst/Desktop/nox.csv")

# Verificăm primele rânduri
head(nox)

# Extragem doar data din coloana zi (fără ora)
nox$data <- as.Date(substr(nox$zi, 1, 10))

# Eliminăm duplicatele - păstrăm doar o valoare per zi
# (deoarece valorile par a fi aceleași pentru toate orele dintr-o zi)
nox_zilnic <- nox %>%
  distinct(data, .keep_all = TRUE)

# Verificăm datele rezultate
head(nox_zilnic)

# Funcție pentru categorisirea valorilor
categorize_value <- function(value) {
  if (value >= 0 && value < 40) return("0-40")
  else if (value >= 40 && value < 90) return("40-90")
  else if (value >= 90 && value <= 120) return("90-120")
  else return("Altele")
}

# Adăugăm coloana de categorie pentru toate valorile
nox_zilnic$SV.1_categorie <- sapply(nox_zilnic$SV.1, categorize_value)

# Grafic cu linie gri și puncte colorate în funcție de valoare
p <- ggplot(nox_zilnic, aes(x = data, y = SV.1)) +
  # Mai întâi adăugăm linia gri
  geom_line(color = "grey", linewidth = 0.8, alpha = 0.7) +
  # Apoi adăugăm punctele colorate
  geom_point(aes(color = SV.1_categorie), size = 3) +
  scale_color_manual(values = c("0-40" = "red", 
                                "40-90" = "orange", 
                                "90-120" = "black",
                                "Altele" = "grey50"),
                     name = "Interval de valori") +
  labs(title = "Evoluția zilnică a SV.1",
       subtitle = "Puncte colorate după interval: 0-40 roșu, 40-90 portocaliu, 90-120 negru",
       x = "Data",
       y = "SV.1") +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.title = element_text(face = "bold"),
    axis.title = element_text(face = "bold")
  )

print(p)
